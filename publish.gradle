apply plugin: 'maven-publish'
apply plugin: 'edu.wpi.first.wpilib.versioning.WPILibVersioningPlugin'

def getVersion = {
    if (WPILibVersion.version.contains('-'))
        return WPILibVersion.version.substring(WPILibVersion.version.indexOf('-'))
    else
        return ""
}

if (!hasProperty('releaseType')) {
    WPILibVersion {
        releaseType = 'dev'
    }
}

def pubVersion
if (project.hasProperty("publishVersion")) {
    pubVersion = project.publishVersion
} else {
    pubVersion = WPILibVersion.version
}

if (pubVersion == null || pubVersion == "") {
  pubVersion = "0.1.0-SNAPSHOT"
}

def baseArtifactId = 'ntcore'
def artifactGroupId = 'edu.wpi.first.ntcore'

publishing {
  publications {
    cpp(MavenPublication) {
      project.tasks.each { task ->
        if (task.name.startsWith('zip') && !task.name.contains('jni')) {
          artifact (task) {
            if (task.name.contains('debug')) {
              classifier = task.classifier + 'debug'
            }
          }
        }
      }

      artifact cppHeadersZip
      artifact cppSourcesZip

      artifactId = baseArtifactId + '-cpp'
      groupId artifactGroupId
      version pubVersion
    }

    jni(MavenPublication) {
      project.tasks.each { task ->
        if (task.name.startsWith('zip') && task.name.contains('jni')) {
          artifact (task) {
            if (task.name.contains('debug')) {
              classifier = task.classifier + 'debug'
            }
          }
        }
      }

      artifactId = baseArtifactId + '-jni'
      groupId artifactGroupId
      version pubVersion
    }

    java(MavenPublication) {
      artifact jar
      artifact sourcesJar
      artifact javadocJar

      artifactId = baseArtifactId + '-java'
      groupId artifactGroupId
      version pubVersion
    }
  }
}